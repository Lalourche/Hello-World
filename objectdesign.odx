<project>
  <packages>
    <javaPackage name="util">
      <projectName>HelloWorld</projectName>
      <path>src/main/java/util</path>
      <classes>
        <classifier name="HibernateHelper">
          <stereotype>Persistence Helper</stereotype>
          <variables>
            <variable name="singleton">
              <type class="util.HibernateHelper"/>
              <multiplicity>0..1</multiplicity>
              <modifiers>8</modifiers>
              <access>2</access>
              <value>new HibernateHelper()</value>
            </variable>
            <variable name="factory">
              <type>org.hibernate.SessionFactory</type>
              <multiplicity>0..1</multiplicity>
              <access>2</access>
            </variable>
            <variable name="currentSession">
              <type>ThreadLocal</type>
              <multiplicity>0..1</multiplicity>
              <access>2</access>
              <value>new ThreadLocal();</value>
            </variable>
          </variables>
          <operations>
            <operation name="constructor">
              <multiplicity>1</multiplicity>
              <access>2</access>
              <generatedName>HibernateHelper</generatedName>
              <exceptions>
                <exception>org.hibernate.HibernateException</exception>
              </exceptions>
              <method>
                <statements>
                  <javaCode></javaCode>
                </statements>
              </method>
            </operation>
            <operation name="main">
              <type basicType="void"/>
              <multiplicity>0</multiplicity>
              <modifiers>8</modifiers>
              <access>1</access>
              <generatedName>main</generatedName>
              <parameters>
                <variable name="args">
                  <type>String</type>
                  <multiplicity>*</multiplicity>
                  <access>1</access>
                  <arrayCount>1</arrayCount>
                </variable>
              </parameters>
              <exceptions>
                <exception>Exception</exception>
              </exceptions>
              <method>
                <statements>
                  <javaCode>String sqlFile = null;</javaCode>
                  <javaCode>if(args.length &gt; 0) { sqlFile = args[0]; }</javaCode>
                  <javaCode>boolean print = (sqlFile == null);</javaCode>
                  <javaCode>boolean export = (sqlFile == null);</javaCode>
                  <javaCode></javaCode>
                  <javaCode>org.hibernate.cfg.Configuration config = getInstance().getConfiguration();</javaCode>
                  <javaCode>org.hibernate.tool.hbm2ddl.SchemaExport exporter = new org.hibernate.tool.hbm2ddl.SchemaExport(config);</javaCode>
                  <javaCode>if(sqlFile != null) { exporter.setOutputFile(sqlFile); }</javaCode>
                  <javaCode>exporter.create(print, export);</javaCode>
                </statements>
              </method>
            </operation>
            <operation name="getInstance">
              <type class="util.HibernateHelper"/>
              <multiplicity>0..1</multiplicity>
              <modifiers>8</modifiers>
              <access>1</access>
              <generatedName>getInstance</generatedName>
              <method>
                <statements>
                  <javaCode>return singleton;</javaCode>
                </statements>
              </method>
            </operation>
            <operation name="getFactory">
              <type>org.hibernate.SessionFactory</type>
              <multiplicity>0..1</multiplicity>
              <modifiers>32</modifiers>
              <access>1</access>
              <generatedName>getFactory</generatedName>
              <exceptions>
                <exception>org.hibernate.HibernateException</exception>
              </exceptions>
              <method>
                <statements>
                  <javaCode>if(factory == null) { org.hibernate.cfg.Configuration config=getConfiguration(); factory=config.buildSessionFactory(); }</javaCode>
                  <javaCode>return factory;</javaCode>
                </statements>
              </method>
            </operation>
            <operation name="close">
              <type basicType="void"/>
              <multiplicity>0</multiplicity>
              <modifiers>32</modifiers>
              <access>1</access>
              <generatedName>close</generatedName>
              <exceptions>
                <exception>org.hibernate.HibernateException</exception>
              </exceptions>
              <method>
                <statements>
                  <javaCode>closeSession();</javaCode>
                  <javaCode>if (factory != null) { factory.close(); factory = null; }</javaCode>
                </statements>
              </method>
            </operation>
            <operation name="getConfiguration">
              <type>org.hibernate.cfg.Configuration</type>
              <multiplicity>0..1</multiplicity>
              <access>1</access>
              <generatedName>getConfiguration</generatedName>
              <exceptions>
                <exception>org.hibernate.MappingException</exception>
              </exceptions>
              <method>
                <statements>
                  <javaCode>org.hibernate.cfg.Configuration config = new org.hibernate.cfg.Configuration();</javaCode>
                  <javaCode>return config;</javaCode>
                </statements>
              </method>
            </operation>
            <operation name="openSession">
              <type>org.hibernate.Session</type>
              <multiplicity>0..1</multiplicity>
              <access>1</access>
              <generatedName>openSession</generatedName>
              <exceptions>
                <exception>org.hibernate.HibernateException</exception>
              </exceptions>
              <method>
                <statements>
                  <javaCode>org.hibernate.Session session = getFactory().openSession();</javaCode>
                  <javaCode>session.connection();</javaCode>
                  <javaCode>return session;</javaCode>
                </statements>
              </method>
            </operation>
            <operation name="getSession">
              <type>org.hibernate.Session</type>
              <multiplicity>0..1</multiplicity>
              <access>1</access>
              <generatedName>getSession</generatedName>
              <exceptions>
                <exception>org.hibernate.HibernateException</exception>
              </exceptions>
              <method>
                <statements>
                  <javaCode>org.hibernate.Session session = (org.hibernate.Session) currentSession.get();</javaCode>
                  <javaCode>if(session == null || !session.isOpen()) { session = openSession(); currentSession.set(session); }</javaCode>
                  <javaCode>return session;</javaCode>
                </statements>
              </method>
            </operation>
            <operation name="closeSession">
              <type>void</type>
              <multiplicity>0</multiplicity>
              <access>1</access>
              <generatedName>closeSession</generatedName>
              <exceptions>
                <exception>org.hibernate.HibernateException</exception>
              </exceptions>
              <method>
                <statements>
                  <javaCode>org.hibernate.Session session = (org.hibernate.Session) currentSession.get();</javaCode>
                  <javaCode>if (session != null &amp;&amp; session.isOpen()) { session.close(); }</javaCode>
                  <javaCode>currentSession.set(null);</javaCode>
                </statements>
              </method>
            </operation>
            <operation name="save">
              <type>void</type>
              <multiplicity>0</multiplicity>
              <access>1</access>
              <generatedName>save</generatedName>
              <parameters>
                <variable name="object">
                  <type class="java.lang.Object"/>
                  <multiplicity>0..1</multiplicity>
                  <access>1</access>
                </variable>
              </parameters>
              <exceptions>
                <exception>org.hibernate.HibernateException</exception>
              </exceptions>
              <method>
                <statements>
                  <javaCode>getSession().save(object);</javaCode>
                </statements>
              </method>
            </operation>
            <operation name="delete">
              <type>void</type>
              <multiplicity>0</multiplicity>
              <access>1</access>
              <generatedName>delete</generatedName>
              <parameters>
                <variable name="object">
                  <type class="java.lang.Object"/>
                  <multiplicity>0..1</multiplicity>
                  <access>1</access>
                </variable>
              </parameters>
              <exceptions>
                <exception>org.hibernate.HibernateException</exception>
              </exceptions>
              <method>
                <statements>
                  <javaCode>getSession().delete(object);</javaCode>
                </statements>
              </method>
            </operation>
          </operations>
          <generatedFiles>
            <name>HibernateHelper.java</name>
            <compilationUnitId>=HelloWorld/src\/main\/java&lt;util{HibernateHelper.java</compilationUnitId>
          </generatedFiles>
        </classifier>
      </classes>
      <rootName>src/main/java</rootName>
      <generateHibernateHelper>true</generateHibernateHelper>
    </javaPackage>
  </packages>
  <basicTypes>
    <basicType>void</basicType>
  </basicTypes>
  <codeGenerators>
    <Java-Bean>
      <generate-property-support>false</generate-property-support>
    </Java-Bean>
    <Unit-Test>
      <src-dir>src/main/java</src-dir>
      <add-junit3-libraries>false</add-junit3-libraries>
    </Unit-Test>
    <Persistent>
      <create-hibernate-cfg-xml>false</create-hibernate-cfg-xml>
      <add-hsqldb-libraries>true</add-hsqldb-libraries>
      <platform>Hibernate 3</platform>
      <create-persistence-xml>true</create-persistence-xml>
      <src-dir>(default)</src-dir>
      <create-helper-main>true</create-helper-main>
      <annotate-getters>true</annotate-getters>
      <generate-dto-associations-many>false</generate-dto-associations-many>
      <generate-collections-as-set>true</generate-collections-as-set>
      <generate-full-classnames>true</generate-full-classnames>
      <add-hibernate3-libraries>true</add-hibernate3-libraries>
      <generate-dto>false</generate-dto>
      <generate-interfaces>false</generate-interfaces>
    </Persistent>
    <DAO>
      <src-dir>(default)</src-dir>
      <generate-interfaces>false</generate-interfaces>
      <use-spring-templates>false</use-spring-templates>
    </DAO>
    <GWT-Service>
      <version>1.5</version>
    </GWT-Service>
  </codeGenerators>
  <properties>
    <conf-dir>(default)</conf-dir>
    <root-package></root-package>
    <create-hibernate-properties>false</create-hibernate-properties>
    <create-log4j-properties>false</create-log4j-properties>
  </properties>
  <codeGeneration>
    <generate-equals-and-hashcode>true</generate-equals-and-hashcode>
    <source-compatibility>5.0</source-compatibility>
    <grammar>None</grammar>
  </codeGeneration>
</project>